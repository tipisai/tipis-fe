name: Release
on:
  push:
    branches:
      - develop
      - main
env:
  ILLA_MUI_LICENSE: ${{ secrets.ILLA_MUI_LICENSE }}
  ILLA_USE_IN_CLIENT: "1"
  ILLA_INTERCOM_APP_ID: ${{ secrets.ILLA_INTERCOM_APP_ID }}
  ILLA_POSTHOG_KEY: ${{ secrets.ILLA_POSTHOG_KEY }}
  DO_CLUSTER: ${{ secrets.DO_CLUSTER }}
  DOCKER_LOGIN: ${{ secrets.DOCKER_LOGIN }}
  DOCKER_PWD: ${{ secrets.DOCKER_PWD }}
  TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
  TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
  ILLA_SENTRY_AUTH_TOKEN: ${{ secrets.ILLA_SENTRY_AUTH_TOKEN }}
jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        settings:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-latest" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
          - platform: "windows-latest"
            args: ""
    runs-on: ${{ matrix.settings.platform }}
    environment:
      name:
        ${{ (github.ref == 'refs/heads/main') && 'production' || (github.ref ==
        'refs/heads/develop') && 'test' || (github.ref == 'refs/heads/beta') &&
        'beta' }}
    env:
      ILLA_API_BASE_URL: ${{ vars.ILLA_API_BASE_URL }}
      ILLA_APP_ENV: ${{ vars.ILLA_APP_ENV }}
      ILLA_CLOUD_URL: tauri://localhost
      ILLA_MARKET_URL: ${{ vars.ILLA_MARKET_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: install dependencies (ubuntu only)
        if: matrix.settings.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - uses: actions/setup-node@v4
        with:
          node-version: 18.12.1

      - uses: pnpm/action-setup@v3
        with:
          version: 8.7.0

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets:
            ${{ matrix.settings.platform == 'macos-latest' &&
            'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: pnpm install # Change this to npm, yarn or pnpm.

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.settings.args }}
          projectPath: "./apps/agent"
